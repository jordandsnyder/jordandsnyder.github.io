<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jordan D. Snyder</title>
    <link>https://jordandsnyder.com/</link>
      <atom:link href="https://jordandsnyder.com/index.xml" rel="self" type="application/rss+xml" />
    <description>Jordan D. Snyder</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© - Jordan D. Snyder - 2020</copyright><lastBuildDate>Thu, 28 Jun 2018 00:00:00 +0100</lastBuildDate>
    <image>
      <url>https://jordandsnyder.com/images/logo_hu295cf20cad5ac039326eae797cf8f463_75892_300x300_fit_lanczos_2.png</url>
      <title>Jordan D. Snyder</title>
      <link>https://jordandsnyder.com/</link>
    </image>
    
    <item>
      <title>Example Talk</title>
      <link>https://jordandsnyder.com/talk/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://jordandsnyder.com/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Winding Road to Peace Building - Longitudinal Outcomes of a Peace Intervention for Survivors and Génocidaires of the 1994 Genocide Against the Tutsi in Rwanda</title>
      <link>https://jordandsnyder.com/publication/carsa_ajcp/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://jordandsnyder.com/publication/carsa_ajcp/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating a Secret Santa program in R</title>
      <link>https://jordandsnyder.com/post/secret-santa/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://jordandsnyder.com/post/secret-santa/</guid>
      <description>&lt;h2 id=&#34;the-inspiration&#34;&gt;The Inspiration&lt;/h2&gt;
&lt;p&gt;My friends and I started a tradition shortly after we left college. Despite being spread out across the country (and now, the world!), we wished to remain in touch and get each other some holiday cheer. As the years moved on, and as we added to our number with partners (and now offspring!), we wanted to continue the tradition of secret santa. One year, my buddy 
&lt;a href=&#34;www.alexrecker.com&#34;&gt;Alex&lt;/a&gt; created a python secret santa bot that divvied us up and sent out emails to all parties involved. This served as the inspation for this project: I wanted to create a program that could divvy us up without giving away our information to others as well as teach myself some programming in the process.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/wranrCRq3f90A/source.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;While writing this little program, I found a lot of great ideas and code snippets from other useRs who looked at these very issues including: 
&lt;a href=&#34;https://www.tjmahr.com/secret-santa-graph-traversal/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tristan Mahr&amp;rsquo;s graphing example&lt;/a&gt;, 
&lt;a href=&#34;https://livefreeordichotomize.com/2017/11/15/secret-sampling/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sarah Lotspeich&amp;rsquo;s and Lucy D&amp;rsquo;Agostino McGowan&amp;rsquo;s example and their ponyexpress integration &lt;/a&gt;, and 
&lt;a href=&#34;https://selbydavid.com/2016/12/07/santa/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;David Selby&amp;rsquo;s secret santa example&lt;/a&gt;. Thanks so much all for helping me create my real first program!&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The problem&lt;/h2&gt;
&lt;p&gt;We wanted a program that could do a couple of things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Match up santas and receivers that were not partners (i.e., in the same family)&lt;/li&gt;
&lt;li&gt;Once the list has been created, email out the results to everyone so that whoever hosted it did not know who their secret santa was!&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;a-solution&#34;&gt;A solution?&lt;/h2&gt;
&lt;p&gt;So, I started to attempt to plan out a game plan to tackle these two specific problems. However, before doing this, I created a test data frame because I wanted to make sure to test the program as I went along.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Create a test data frame
santa_firstnames &amp;lt;- c(&amp;quot;Jack&amp;quot;, &amp;quot;Jill&amp;quot;, &amp;quot;Lyle&amp;quot;, &amp;quot;Lilly&amp;quot;, &amp;quot;Bill&amp;quot;, &amp;quot;Dan&amp;quot;, &amp;quot;Deloris&amp;quot;, &amp;quot;Emily&amp;quot;)
santa_lastnames &amp;lt;- c(&amp;quot;Smith&amp;quot;, &amp;quot;Smith&amp;quot;, &amp;quot;Lewis&amp;quot;, &amp;quot;Lewis&amp;quot;, &amp;quot;Buttes&amp;quot;, &amp;quot;Deznada&amp;quot;, &amp;quot;Deznada&amp;quot;, &amp;quot;Richardson&amp;quot;)
santa_email &amp;lt;- c(&amp;quot;jacks@test.com&amp;quot;, &amp;quot;jills@test.com&amp;quot;, &amp;quot;lylel@test.com&amp;quot;, &amp;quot;lillyl@test.com&amp;quot;, &amp;quot;billb@test.com&amp;quot;,
           &amp;quot;dand@test.com&amp;quot;,&amp;quot;delorisd@test.com&amp;quot;, &amp;quot;emilyr@test.com&amp;quot;)
santa_address &amp;lt;- c(&amp;quot;123 Cherryhill Drive, San Diego, CA 92103&amp;quot;,&amp;quot;123 Cherryhill Drive, San Diego, CA 92103&amp;quot;,
                   &amp;quot;234 elms ln, Anchorage, AK 99116&amp;quot;, &amp;quot;234 Carita ln, Anchorage, AK 99116&amp;quot;,
                   &amp;quot;111 Pleasantview Dr., Chicago 11111&amp;quot;, &amp;quot;222 ELM St., Atlanta, GA 22222&amp;quot;,
                   &amp;quot;222 ELM St., Atlanta, GA 22222&amp;quot;, &amp;quot;999 Peaches St., Tokyo, JPN, 11111&amp;quot;)
testdf &amp;lt;- as.data.frame(cbind(santa_firstnames,santa_lastnames,santa_email,santa_address))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This dataframe would serve as my testing agent throughout the process.&lt;/p&gt;
&lt;p&gt;The first function I used was sample():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  newdf &amp;lt;- testdf %&amp;gt;%
    mutate(receiver_firstnames = sample(santa_firstnames))
    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I then changed the variable names on the original dataframe and pulled them into this newly created dataframe.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  #Create a partner data frame to merge partner variables into it!
  partnerdf &amp;lt;- testdf %&amp;gt;%
    transmute(receiver_firstnames = santa_firstnames,
              receiver_lastnames = santa_lastnames,
              receiver_email = santa_email,
              receiver_address = santa_address)
  #Now join the data frames!
  newdf &amp;lt;- dplyr::inner_join(newdf,partnerdf, by = &amp;quot;receiver_firstnames&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Although I knew using the sample() function could be helpful, I soon ran into the problem of having an individual being assigned to themselves. In order to avoid a Kevin scenario [GIF OF KEVIN INSERT], we had to add an ifelse() statement!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;newdf$self_eval &amp;lt;- ifelse(newdf$receiver_firstnames == newdf$santa_firstnames, &amp;quot;Problems!&amp;quot;, &amp;quot;No problem here!&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This did not necessarily change anything, but it let me knew if there was an issue where someone had themselves!&lt;/p&gt;
&lt;p&gt;I did something similar for last names to let me know if there was an issue.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  newdf$fam_eval &amp;lt;- ifelse(newdf$receiver_lastnames == newdf$santa_lastnames, &amp;quot;Problems!&amp;quot;, &amp;quot;No problem here!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When I got here, I was pretty satisfied! It took a few times of me pressing buttons to rerun the code, but usually after a few tries, I would get a data frame that had no problems!&lt;/p&gt;
&lt;p&gt;However, I am quite lazy, and did not wish to continue to press the button. This is probably the weaker area of coding for me, but I needed to have the program continue to iterate until an adequate solution was found. Enter the repeat loop with a condition statement!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Create a repeat loop that will continue to go over this list until there are no issues (1. No person has themselves. 2. No person has their partner.)
repeat {
...
  #Final problem check!
  newdf$finaleval &amp;lt;- ifelse(newdf$fam_eval == &amp;quot;Problems!&amp;quot; | newdf$self_eval == &amp;quot;Problems!&amp;quot;,print(&amp;quot;Stop, there are issues!&amp;quot;),print(&amp;quot;Ain&#39;t no issues here!&amp;quot;));
  #Drop superflous columns and create output dataframe!
  SecretSanta &amp;lt;- newdf %&amp;gt;% select(-c(receiver_email,santa_address,fam_eval,self_eval,finaleval))
  if (all(newdf$finaleval == &amp;quot;Ain&#39;t no issues here!&amp;quot;)) { #Are there issues? If so, repeat loop.
    print(&amp;quot;We are all finished with divvying up the presents!&amp;quot;);
    break
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I created a final evaluation check that examined our two above error statments, and if there were some problems, it would let us know, but then would repeat the process until a resultant dataframe was created which satisfied all of our conditions.&lt;/p&gt;
&lt;p&gt;I then also had it create a final dataframe that was a little bit cleaner for our final step in the process: letting individuals know whom to buy for!&lt;/p&gt;
&lt;p&gt;To do this, I slightly adapted the 
&lt;a href=&#34;https://github.com/ropenscilabs/ponyexpress&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ponyexpress Package&lt;/a&gt;. For some reason, I got an error when it was validating emails, and so I took that portion of the function out (I am not too familiar with grepl and associated functions or stringr), and then the code worked pretty well.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;parcel_create &amp;lt;- function(df,
                          sender_name = NULL,
                          sender_email = NULL,
                          subject = NULL,
                          bcc = NULL,
                          template = NULL) {
  emails &amp;lt;- NULL
  if (is.null(df) || is.null(sender_name) || is.null(sender_email) || is.null(template)) {
    stop(&amp;quot;You must supply a value for: df, sender_name, sender_email, and template&amp;quot;)
  }
  
  email &amp;lt;- df
  email$To &amp;lt;- glue::glue_data(df,&amp;quot;{santa_firstnames} &amp;lt;{santa_email}&amp;gt;&amp;quot;)
  email$Bcc &amp;lt;- bcc
  email$From &amp;lt;- glue::glue(&amp;quot;{sender_name} &amp;lt;{sender_email}&amp;gt;&amp;quot;)
  email$Subject &amp;lt;- subject
  email$body &amp;lt;- glue::glue_data(df, template)
  email &amp;lt;- email[, names(email) %in% c(&amp;quot;To&amp;quot;, &amp;quot;Bcc&amp;quot;, &amp;quot;From&amp;quot;, &amp;quot;Subject&amp;quot;, &amp;quot;body&amp;quot;)]
  structure(email, class = c(&amp;quot;parcel&amp;quot;, &amp;quot;data.frame&amp;quot;))
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We then create our nice little body of text with our santa message and the GIF from above to spread some holiday cheer:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
body &amp;lt;- &amp;quot;Merry Christmas Santa {santa_firstnames}!

In the spirit of Santa, you will be getting a gift for {receiver_firstnames}. 

Make sure to get it to {receiver_address} by Dec 25!


&amp;lt;img src = &#39;https://media.giphy.com/media/zhPXoVIBMtnUs/giphy.gif&#39;&amp;gt; &amp;lt;/img&amp;gt;

Santa R Bot&amp;quot;

our_template &amp;lt;- glue::glue(glitter_template)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once we are done with this and creating our template, we create the parcel!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;parcel &amp;lt;- parcel_create(SecretSanta,
                        sender_name = &amp;quot;Jordan&amp;quot;,
                        sender_email = &amp;quot;testemail@test.com&amp;quot;,
                        subject = &amp;quot;SECRET SANTA&amp;quot;,
                        template = our_template)

parcel_preview(parcel)  

parcel_send(parcel)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is really an excellent package that I hope to use more in the future! I don&amp;rsquo;t know what part of my email was causing the validation error, but taking it out seemed to help.&lt;/p&gt;
&lt;p&gt;Then, the emails were sent!&lt;/p&gt;
&lt;h2 id=&#34;critique&#34;&gt;Critique&lt;/h2&gt;
&lt;p&gt;I doubt that this is the most efficient or elegant way to solve this issue. I would prefer a method a bit more proactive rather than bruteforcing an approach, but I am quite pragmatic at the end of the day. This way of solving may result in closed loops of folks giving to each other (e.g., Person A gifts to Person B who gifts to Person C who gifts to Person A while we have three other people that give to each other without crossover), but this is not something we particularly care about at this point in time. I don&amp;rsquo;t know how this process would scale with more folks, but this is good enough for where we are at, I think.&lt;/p&gt;
&lt;h2 id=&#34;reflections-on-the-process&#34;&gt;Reflections on the process&lt;/h2&gt;
&lt;p&gt;When I began using R, I was trying to finish my dissertation with it, which I did, but it was a mess. I feel like I have come far from that point. However, going through this process I learned that I have a ways to go. Yet, once I got that repeat loop working, I felt proud of what I accomplished. As my partner could tell you once I sent the draft emails, I was elated! It felt awesome to solve a small problem.&lt;/p&gt;
&lt;p&gt;As I look to more analytic projects in the future, I think I took away some helpful tips. First and foremost, sitting down to write out the steps of the problem as I saw them and planning was critical. It kept me on task, kept the tasks more manageable, and allowed me to compartmentalize testing. Testing the program (albeit crude) along the way to make sure the steps were working as I intended and then testing the program with the steps I completed to at that point helped me catch so many errors, big and small, while my thinking was still fresh. Third, was to have some good food while doing it and watch some football!&lt;/p&gt;
&lt;p&gt;Would love to have some feedback!&lt;/p&gt;
&lt;p&gt;Jordan&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Resource Loss and Stress Outcomes in a Setting of Chronic Conflict</title>
      <link>https://jordandsnyder.com/publication/resourceloss/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://jordandsnyder.com/publication/resourceloss/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://jordandsnyder.com/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://jordandsnyder.com/slides/example/</guid>
      <description>&lt;h1 id=&#34;welcome-to-slides&#34;&gt;Welcome to Slides&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>https://jordandsnyder.com/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      <guid>https://jordandsnyder.com/privacy/</guid>
      <description>&lt;p&gt;Your Privacy is critically important to us.&lt;/p&gt;
&lt;p&gt;It is ours policy to respect your privacy regarding any information we may collect while operating our website. This Privacy Policy applies to jordandsnyder.com (hereinafter, &amp;ldquo;us&amp;rdquo;, &amp;ldquo;we&amp;rdquo;, or &amp;ldquo;jordandsnyder.com&amp;rdquo;). We respect your privacy and are committed to protecting personally identifiable information you may provide us through the Website. We have adopted this privacy policy (&amp;ldquo;Privacy Policy&amp;rdquo;) to explain what information may be collected on our Website, how we use this information, and under what circumstances we may disclose the information to third parties. This Privacy Policy applies only to information we collect through the Website and does not apply to our collection of information from other sources.
This Privacy Policy, together with the Terms and conditions posted on our Website, set forth the general rules and policies governing your use of our Website. Depending on your activities when visiting our Website, you may be required to agree to additional terms and conditions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Website Visitors
Like most website operators, we collect non-personally-identifying information of the sort that web browsers and servers typically make available, such as the browser type, language preference, referring site, and the date and time of each visitor request. Our purpose in collecting non-personally identifying information is to better understand how our visitors use its website. From time to time, we may release non-personally-identifying information in the aggregate, e.g., by publishing a report on trends in the usage of its website.
We also collect potentially personally-identifying information like Internet Protocol (IP) addresses for logged in users and for users leaving comments on blog posts. We only discloses logged in user and commenter IP addresses under the same circumstances that it uses and discloses personally-identifying information as described below.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Security
The security of your Personal Information is important to us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While we strive to use commercially acceptable means to protect your Personal Information, we cannot guarantee its absolute security.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advertisements
Ads appearing on our website may be delivered to users by advertising partners, who may set cookies. These cookies allow the ad server to recognize your computer each time they send you an online advertisement to compile information about you or others who use your computer. This information allows ad networks to, among other things, deliver targeted advertisements that they believe will be of most interest to you. This Privacy Policy covers the use of cookies by us and does not cover the use of cookies by any advertisers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Links To External Sites
Our Service may contain links to external sites that are not operated by us. If you click on a third party link, you will be directed to that third party&amp;rsquo;s site. We strongly advise you to review the Privacy Policy and terms and conditions of every site you visit.
We have no control over, and assume no responsibility for the content, privacy policies or practices of any third party sites, products or services.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aggregated Statistics
We may collect statistics about the behavior of visitors to its website. We may display this information publicly or provide it to others. However, We does not disclose your personally-identifying information.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cookies
To enrich and perfect your online experience, we use &amp;ldquo;Cookies&amp;rdquo;, similar technologies and services provided by others to display personalized content, appropriate advertising and store your preferences on your computer.
A cookie is a string of information that a website stores on a visitor&amp;rsquo;s computer, and that the visitor&amp;rsquo;s browser provides to the website each time the visitor returns. We uses cookies to help us identify and track visitors, their usage of our website, and their website access preferences. Our visitors who do not wish to have cookies placed on their computers should set their browsers to refuse cookies before using our websites, with the drawback that certain features of our websites may not function properly without the aid of cookies.
By continuing to navigate our website without changing your cookie settings, you hereby acknowledge and agree to our use of cookies.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Privacy Policy Changes
Although most changes are likely to be minor, we may change its Privacy Policy from time to time, and in our sole discretion. We encourage visitors to frequently check this page for any changes to its Privacy Policy. Your continued use of this site after any change in this Privacy Policy will constitute your acceptance of such change.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Caregiver perceptions of environment moderate relationship betweenneighborhood characteristics and language skills among youth living withperinatal HIV and uninfected youth exposed to HIV in New York City</title>
      <link>https://jordandsnyder.com/publication/casah/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://jordandsnyder.com/publication/casah/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
